name: PR Checklist

on:
  pull_request:
    types:
      - opened

jobs:
  add-comment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const comment = `
            Thanks for creating a pull request! The below questions and checklist are intended to help with verifying your change is well tested. Please edit this comment by answering the questions below, or replacing the questions with your own description. Please remove this paragraph once you finish editing this comment.

            ## Type of change made in this PR
            - [ ] Functional change
            - [ ] Test-only change
            - [ ] Refactor-only change
            - [ ] Other non-functional change

            ## What makes this change safe?
            A good answer to this question helps the reviewers understand where they should focus their attention, so please consider these questions:
            - How risky is this change? Why? 
            - What tests are you adding or changing? Why?
            - What existing tests are you relying on? 
            - What, if anything, are you concerned about that you'd like the reviewer to focus on?
            
            References:
            - [Risk level guide](https://github.com/wiredtiger/wiredtiger/blob/develop/.github/risk_level_guide.md)
            - [Testing frameworks](https://github.com/wiredtiger/wiredtiger/blob/develop/test/testing_frameworks.md)

            ## Checklist before requesting a review
            - [ ] I have performed a self-review of my code.
            - [ ] I have made corresponding changes to the documentation, or no documentation change is needed.
            - [ ] I have added/updated tests that demonstrate my fix is effective or that my feature works correctly, or have described the reason above if no test change is made.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
