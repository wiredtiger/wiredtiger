# Results of running modularity_check.py generate_dependency_file on all 
# commits from c4ff543d29 (28th August 2022) to 1d6e1fa15d (23rd August 2024)
# Any change to the dependency_file is logged below

###########################################
# Analysis                                #
###########################################

Over this time period we had:
    1896 commits
    12 changes to the dependency file
        3 of those were reverted and redelivered (Indicates these changes were risky!)
        2 of those reduce the dependency graph   (Good!)
        2 Introduced new components              (Expected to change the graph. Not so interesting)

Importantly, 25% (3 of 12) of commits that changed the dependency graph resulted in a revert and redelivery.
One of these commits had fewer additional dependencies when it was redelivered, implying the correct change was smaller scope.

If we ignore commits that reduce the dependency graph or add a brand new components then the number of commits that change the 
dependency graph and need a revert rises to 37.5%. This doesn't guarantee that weak modularity is the reason for the reverts, 
but it's a signal worth reviewing.

For reference we have 108 reverts from the 1896 commits reviewed. 
(`git log c4ff543d29fb4d02ba62f4349652477f46eb7b6f..develop --reverse --pretty=format:"%H %s" | grep 'Revert "' | wc -l`)
This is a 5.7% revert rate. Commits that produced a change in the dependency graph were 6.5 times more likely to be reverted 
than an average commit.

##########################################################
# Notes on the commits that changes the dependency graph #
##########################################################

(Changes beginning with > imply a new dependency, < imply a removed dependency)
`A -> B` means A has a dependency on B

WT-9881 Add flush_tier configuration to checkpoint. (#8323)
    > txn -> tiered

WT-10164 Split apart the rollback to stable implementation into multiple files (#8488)
    !! New component rollback_to_stable !!
    > Many changes that add rollback_to_stable
    < txn -> reconcile
    This was a refactor that moved RTS out of txn/

WT-10330 Merge codify-timestamps project (#8592)
    > Many changes to call_log
    This added a new call_log component. All changes are related to call_log

WT-6682 Implement history store verification (#8942)
    > btree -> history
    > history -> meta

WT-10108 Add a data structure encapsulating user level truncate context (#8456)
    > schema -> txn

WT-11491 Log the WiredTiger time spent during startup and shutdown (#9524)
    !! Clean up! !!
    < rollback_to_stable -> os_layer

WT-11721 Chunk cache metadata file management (#9704)
    !! Revert and redelivery !!
    The original commit added:
        > block_cache -> schema
        > block_cache -> session
    The revised commit only added
        > block_cache -> session

WT-11723 Chunk cache worker thread mechanism (#9759)
    !! Clean up !!
    < block_cache -> session

WT-11126 Add configuration compilation to speed up WT_SESSION::begin_transaction (#9201)
    !! New component conf !!
    > Many including conf
    This adds a new component

WT-10743 Perform rollback to stable using multiple worker threads (#10148)
    !! Revert and redelivery !!
    > rollback_to_stable -> os_layer

WT-12298 Use the config compilation API for the bounded cursor. (#10445)
    > cursor -> conf
    Expected. Add conf compile for bounded cursors

WT-12938 Skip compact for small files in background compact (#10633)
    !! Revert and redelivery !!
    > conn -> block
