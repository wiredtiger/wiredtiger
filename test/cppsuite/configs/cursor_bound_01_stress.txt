# Configuration for cursor_bound_01 default test.
# During the test duration:
#   - M threads will keep inserting new random keys.
#   - N threads will execute search_near calls with random bounds set. Each search_near
# call with bounds set is verified against the default search_near.
#   - O threads will continuously remove random keys.
#   - P threads will continuously update random keys.
#   - Q threads will utilize the custom operation and will execute next() and prev() calls with
# random bounds.
duration_seconds=600,
cache_size_mb=1500,
reverse_collator=false,
timestamp_manager=
(
    # This will let us randomly pick a read timestamp in a bigger range to trigger visibility
    # checks.
    stable_lag=25,
    oldest_lag=25,
),
workload_manager=
(
    populate_config=
    (
        collection_count=100,
        key_count_per_collection=1,
        value_size=100000,
        thread_count=50,
    ),
    #100MB/s insert rate
    insert_config=
    (
        key_size=100,
        op_rate=100ms,
        thread_count=10,
        value_size=1000000,
        ops_per_transaction=(max=20,min=0)
    ),
    read_config=
    (
        op_rate=3ms,
        thread_count=30
    ),
    #100MB/s remove reate
    remove_config=
    (
        op_rate=10ms,
        thread_count=10,
        ops_per_transaction=(max=20,min=0)
    ),
    #100MB/s update rate
    update_config=
    (
        op_rate=100ms,
        thread_count=10,
        value_size=1000000,
        ops_per_transaction=(max=20,min=0)
    ),
    custom_config=
    (
        thread_count=10
    ),
    checkpoint_config=
    (
        op_rate=240s,
    )
),
operation_tracker=
(
    enabled=false,
)