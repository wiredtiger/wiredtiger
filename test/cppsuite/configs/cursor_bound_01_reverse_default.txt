# Configuration for cursor_bound_01 reverse default test.
# During the test duration:
#   - M threads will keep inserting new random keys.
#   - N threads will execute search_near calls with random bounds set. Each search_near
# call with bounds set is verified against the default search_near.
#   - O threads will continuously remove random keys.
#   - P threads will continuously update random keys.
#   - Q threads will utilize the custom operation and will execute next() and prev() calls with
# random bounds.
# This configuration will use the reverse collator which changes the ordering of the btree.
duration_seconds=20,
cache_size_mb=500,
reverse_collator=true,
timestamp_manager=
(
    # This will let us randomly pick a read timestamp in a bigger range to trigger visibility
    # checks.
    oldest_lag=50,
),
workload_manager=
(
    populate_config=
    (
        collection_count=10,
        key_count_per_collection=0,
        thread_count=0,
    ),
    insert_config=
    (
        key_size=10,
        op_rate=10ms,
        thread_count=5,
        value_size=20
    ),
    read_config=
    (
        op_rate=3ms,
        thread_count=10
    ),
    remove_config=
    (
        op_rate=500ms,
        thread_count=1
    ),
    update_config=
    (
        op_rate=15ms,
        thread_count=10,
        value_size=20
    ),
    custom_config=
    (
        thread_count=5
    )
),
operation_tracker=
(
    enabled=false,
)
