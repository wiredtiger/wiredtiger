#!/usr/bin/env python
#  subunit: extensions to python unittest to get test results from subprocesses.
#  Copyright (C) 2010 Jelmer Vernooij <jelmer@samba.org>
#
#  Licensed under either the Apache License, Version 2.0 or the BSD 3-clause
#  license at the users choice. A copy of both licenses are available in the
#  project source as Apache-2.0 and BSD. You may not use this file except in
#  compliance with one of these two licences.
#  
#  Unless required by applicable law or agreed to in writing, software
#  distributed under these licenses is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
#  license you chose for the specific language governing permissions and
#  limitations under that license.
#

"""Notify the user of a finished test run."""

import pygtk
pygtk.require('2.0')
import pynotify
from testtools import StreamToExtendedDecorator

from subunit import TestResultStats
from subunit.filters import run_filter_script

if not pynotify.init("Subunit-notify"):
    sys.exit(1)


def notify_of_result(result):
    result = result.decorated
    if result.failed_tests > 0:
        summary = "Test run failed"
    else:
        summary = "Test run successful"
    body = "Total tests: %d; Passed: %d; Failed: %d" % (
        result.total_tests,
        result.passed_tests,
        result.failed_tests,
    )
    nw = pynotify.Notification(summary, body)
    nw.show()


run_filter_script(
    lambda output:StreamToExtendedDecorator(TestResultStats(output)),
    __doc__, notify_of_result, protocol_version=2)
