#!/bin/bash

# Single space, newline at the end of file, and remove trailing whitespace from source files.
t=__wt.$$
trap 'rm -f $t' 0 1 2 3 13 15

# Clear lines that only contain whitespace, compress multiple empty lines
# into a single line, discard trailing empty lines.
# Add a newline to the end of the file if there is not one.
whitespace()
{
    ! head $1 | grep -q 'automatically generated by SWIG' || return
    if [[ "$1" == *.py ]]; then
        # Special handling for Python, which allows multiple empty lines.
        cat $1 | sed -e 's/[[:space:]]*$//' > $t
        test "$(tail -c 1 "$1" | wc -l)" -eq 0 && echo >> $t
    else
        # All other file types.
        (cat $1 && echo) | sed -e 's/[[:space:]]*$//' | \
            cat -s | \
            sed -e '${' -e '/^$/d' -e '}' > $t
    fi
    cmp $t $1 > /dev/null 2>&1 || (echo "$1" && cp $t $1)
}

cd ..

find bench dist examples ext src test \
    -name '*.[ch]' -o \
    -name '*.cpp' -o \
    -name '*.dox' -o \
    -name '*.in' -o \
    -name '*.py' -o \
    -name '*.sh' -o \
    -name '*.yaml' -o \
    -name '*.yml' -o \
    -name 's_*' -o \
    -name 'CONFIG.*' -o \
    -name 'Makefile.am' |
    sed -e '/Makefile.in/d' \
        -e '/checksum\/power8/d' \
        -e '/3rdparty/d' \
        -e '/docs\/tools/d' \
        -e '/log\/log_auto/d' \
| while read f ; do
    whitespace $f
done

exit 0
