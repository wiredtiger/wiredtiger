/*! @page timestamp_roundup Automatic timestamp rounding

Applications setting timestamps for a transaction have to comply with the
constraints based on the global timestamp state. In order to be compliant with
the constraints applications will need to query the global timestamp state and
check their timestamps for compliance and adjust timestamps if required, and
this creates obvious races with other threads. To reduce application burden,
WiredTiger supports automatic timestamp rounding in some scenarios.

Applications can configure
<code>roundup_timestamps=(prepared=true,read=true)</code> with
the WT_SESSION::begin_transaction method.

Configuring <code>roundup_timestamps=(read=true)</code> causes the read
timestamp to be rounded up to the oldest timestamp. If the read timestamp is
greater than the oldest timestamp no change will be made.

Configuring <code>roundup_timestamps=(prepared=true)</code> is only meaningful
for transactions that will be prepared.
It indicates that the prepare timestamp should be
rounded up to the stable timestamp, if the prepare timestamp is less than the
stable timestamp. This setting also indicates that the commit timestamp of the
transaction should be rounded up to the prepare timestamp, if the commit
timestamp is less than the prepare timestamp.
It does not affect the durable timestamp.

Based on the timestamp values and
constraints, enabling this configuration could result in only one of the timestamps
being rounded up. For example, for the timestamp values
<code>prepare_timestamp=100, commit_timestamp=300, oldest_timestamp=200</code>
with configuration <code>roundup_timestamps=(prepared=true)</code> only the
prepare timestamp will be rounded up to the oldest timestamp. The commit
timestamp will not be adjusted, and the result will be
<code>prepare_timestamp=200, commit_timestamp=300, oldest_timestamp=200</code>.

For cases where both the prepare timestamp and the commit timestamp need to be
rounded up, first the prepare timestamp will be rounded to the oldest timestamp
and then the commit timestamp will be rounded up to the new prepare timestamp.

For example, for the timestamp values <code>prepare_timestamp=100,
commit_timestamp=150, oldest_timestamp=200</code> with configuration
<code>roundup_timestamps=(prepared=true)</code>, the prepare timestamp is
rounded up to the oldest timestamp as <code>prepare_timestamp=200</code>
when calling WT_SESSION::prepare_transaction.
Subsequently as part of WT_SESSION::commit_transaction, the commit timestamp is
rounded up to the new prepare timestamp as <code>commit_timestamp=200</code>.

*/
