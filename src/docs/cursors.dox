/*! @page cursors Cursors

Common operations in WiredTiger are performed using WT_CURSOR handles.
A cursor includes:

- a position within a data source
- getter/setters for key and value fields
- encoding of fields to store in the data source
- methods to navigate within and iterate through the data

See @subpage cursor_ops for a description of how to use cursors.

@section cursor_types Cursor types

The following are some of common builtin cursor types:

<table>
  @hrow{URI, Type}
   @row{<tt>colgroup:\<tablename\>.\<columnset\></tt>,
column group cursor}
  @row{<tt>table:\<tablename\></tt>,
table cursor (key=table key\, value=table value)}
  @row{<tt>file:\<filename\></tt>,
file cursor (key=file key\, value=file value)}
  @row{<tt>index:\<tablename\>.\<indexname\></tt>,
index cursor (key=index key\, value=table value)}
  @row{<tt>statistics:[file</tt><tt>:\<filename\>]</tt>,
  database or file statistics (key=(int)\,
  value=(string)description\, (string)value\, (uint64_t)value)}
</table>

See @subpage data_sources for the full list.

@section cursor_projections Projections

Cursors on tables, column groups and indices can return a subset of
columns.  This is done by listing the column names in parenthesis in the
<code>uri</code> parameter to WT_SESSION::open_cursor.  Only the fields
from the listed columns are returned by WT_CURSOR::get_value.

This is particularly useful with index cursors, because if all columns in
the projection are available in the index (including primary key columns,
which are the values of the index), there is no need to access any column
groups.

@section cursor_raw Raw mode

Cursors can be configured for raw mode by specifying the \c "raw" config
keyword to WT_SESSION::open_cursor.  In this mode, the methods
WT_CURSOR::get_key, WT_CURSOR::get_value, WT_CURSOR::set_key and
WT_CURSOR::set_value all take a single WT_ITEM in the variable-length
argument list instead of a separate argument for each column.

For WT_CURSOR::get_key and WT_CURSOR::get_value in raw mode, the WT_ITEM
can be split into columns by calling ::wiredtiger_struct_unpack with the
cursor's \c key_format or \c value_format, respectively.  For
WT_CURSOR::set_key and WT_CURSOR::set_value in raw mode, the WT_ITEM
should be equivalent to calling ::wiredtiger_struct_pack for the
cursor's \c key_format or \c value_format, respectively.

@section cursors_transactions Transactions

A transactional cursor (any cursor that supports transactional operations),
operates in the context of the active transaction, if any.  When a transaction
is started with the WT_SESSION:begin_transaction method, all already open
transactional cursors begin operating in the context of the new transaction.
Any transactional cursors opened after the transaction is started will also
operate in the context of the transaction.  When a transaction is ended with
the WT_SESSION::commit_transaction or WT_SESSION::rollback_transaction methods,
all open cursors are reset, as if the WT_CURSOR::reset method was called.  The
cursor reset discards any cursor position as well as key value.

*/
