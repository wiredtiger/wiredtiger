/*! @page upgrading Upgrading WiredTiger applications

@section version_161 Upgrading to Version 1.6.1
<dl>

<dt>Default page sizes</dt>
<dd>
In the 1.6.1 release, the default for the WT_SESSION::create configuration
string \c allocation_size changed from 512B to 4KB, and the default for the
configuration string \c internal_page_max changed from 2KB to 4KB.
Applications wanting to create files with smaller allocation or internal
page sizes will need to set those configuration values explicitly.
</dd>

<dt>Shared cache configuration</dt>
<dd>
In the 1.6.1 release, an explicit shared_cache=(enable=boolean) option was
added to the wiredtiger_open configuration options. Existing applications that
use shared cache functionality will need to add the enable option to the
configuration string. The default value for the option is false.
</dd>

<dt>WT_COMPRESSOR::compress_raw signature</dt>
<dd>
In the 1.6.1 release, the \c split_pct argument to the
WT_COMPRESSOR::compress_raw function changed type from \c u_int to \c int,
applications may require modification to avoid compiler warnings.
</dd>

</dl>
<hr>
@section version_160 Upgrading to Version 1.6.0
<dl>

<dt>File format changes</dt>
<dd>
The underlying file formats changed in the 1.6.0 release; tables and files
should be dumped and re-loaded into a new database.
</dd>

</dl>
<hr>
@section version_153 Upgrading to Version 1.5.3
<dl>

<dt>Configuration strings</dt>
<dd>
An undocumented feature where configuration string case was ignored has
been removed, and all configuration strings are now case-dependent.
Applications may require modifications to resolve run-time errors.
</dd>

<dt>Loading extensions and WT_EXTENSION_API</dt>
<dd>
The following changes are only applicable to applications loading
extensions and/or using the WiredTiger extension functions described in
WT_EXTENSION_API.

<ul>
<li>
The signature of ::wiredtiger_extension_init has changed
from <code>(WT_SESSION *session, WT_EXTENSION_API *api)</code> to
<code>(WT_CONNECTION *connection)</code>.   As no WT_EXTENSION_API
handle reference is passed to the function, the
WT_CONNECTION::get_extension_api has been added to support retrieval of
the extension API.  Applications may require modifications.

<li>
The type of all configuration arguments to extension methods has changed
from \c "const char *" to \c "WT_CONFIG_ARG *", and the WT_EXTENSION::config
method added to support configuration parsing; applications may require
modifications.

<li>
The undocumented \c wiredtiger_XXX defines for WT_EXTENSION_API extension
methods have been removed from the \c wiredtiger_ext.h include file;
applications should instead use the method handles referenced by the
WT_EXTENSION_API handle to call extension functions.

<li>
The extension API methods have all changed to require an additional
parameter, the WT_EXTENSION_API method handle; applications may require
modifications.

<li>
The WT_SESSION::msg_printf method was replaced by WT_EXTENSION_API::msg_printf;
applications may require modifications.
</ul>
</dd>

<dt>WT_DATA_SOURCE</dt>
<dd>
The following changes are only applicable to applications providing new
implementations of the WiredTiger WT_DATA_SOURCE class.

<ul>
<li>
The WT_DATA_SOURCE class has three new methods: WT_DATA_SOURCE::compact,
WT_DATA_SOURCE::salvage, and WT_DATA_SOURCE::verify; applications may
require modifications to resolve compile errors.

<li>
The \c owner argument to the WT_DATA_SOURCE::open_cursor method has been
removed; applications may require modifications to resolve compile errors.

<li>
The \c exclusive argument to the WT_DATA_SOURCE::create method has been
removed; applications may require modifications to resolve compile errors.
</ul>
</dd>

</dl>
<hr>
@section version_143 Upgrading to Version 1.4.3
<dl>

<dt>Statistics</dt>
<dd>
WiredTiger statistics are no longer maintained by default; to configure
statistics, use the \c statistics configuration string to the
::wiredtiger_open function.
</dd>

</dl>
<hr>
@section version_139 Upgrading to Version 1.3.9
<dl>

<dt>Compression</dt>
<dd>
A new member, WT_COMPRESSOR::compress_raw, was added to the WT_COMPRESSOR
extension API.  Applications using the WT_COMPRESSOR extension API should
add a NULL as the second field of that structure.
</dd>

<dt>Checksums</dt>
<dd>
The WT_SESSION::create method's \c checksum configuration string has
been changed from a boolean type to a string type.  Applications using
the checksum configuration string should change a value of \c true to
the string \c on, and a value of \c false to the string \c off or the
string \c uncompressed.
</dd>

<dt>File format changes</dt>
<dd>
The underlying file formats changed in the 1.3.9 release; tables and files
should be dumped and re-loaded into a new database.
</dd>

</dl>
<hr>
@section version_138 Upgrading to Version 1.3.8
<dl>

<dt>Statistics keys</dt>
<dd>
The @ref statistics_keys "statistics key constants" have been renamed to use
all capitals, and use consistent prefixes to distinguish between connection
statistics and statistics for data sources.
</dd>

</dl>
<hr>
@section version_136 Upgrading to Version 1.3.6
<dl>

<dt>Installed library names</dt>
<dd>
The installed WiredTiger extension library names changed to limit
namespace pollution:

<table>
@hrow{Library, Previous Name, New Name}
@row{Bzip2 compression, bzip2_compress.a, libwiredtiger_bzip2.a}
@row{, bzip2_compress.la, libwiredtiger_bzip2.la}
@row{, bzip2_compress.so, libwiredtiger_bzip2.so}
@row{Snappy compression, snappy_compress.a, libwiredtiger_snappy.a}
@row{, snappy_compress.la, libwiredtiger_snappy.la}
@row{, snappy_compress.so, libwiredtiger_snappy.so}
@row{No-op compression, nop_compress.a, No longer installed}
@row{, nop_compress.la, No longer installed}
@row{, nop_compress.so, No longer installed}
@row{Reverse order collator, reverse_collator.a, No longer installed}
@row{, reverse_collator.la, No longer installed}
@row{, reverse_collator.so, No longer installed}
</table>
</dd>

<dt>Built-in compression names</dt>
<dd>
The built-in compression name arguments to the WT_SESSION:create
\c block_compressor configuration string changed for consistency:

<table>
@hrow{Extension, Previous Name, New Name}
@row{Bzip2 compression, "bzip2_compress", "bzip2"}
@row{Snappy compression, "snappy_compress", "snappy"}
</table>
</dd>

</dl>
<hr>
@section version_135 Upgrading to Version 1.3.5
<dl>

<dt>File format changes</dt>
<dd>
The underlying file formats changed in the 1.3.5 release; tables and files
should be dumped and re-loaded into a new database.
</dd>

</dl>
<hr>
@section version_13 Upgrading to Version 1.3
<dl>

<dt>Checkpoint and Snapshot</dt>
<dd>
The checkpoint functionality supported by WT_SESSION::checkpoint and the
snapshot functionality supported by WT_SESSION::sync have been merged
into a single piece of functionality.

<ul>
<li>WT_SESSION.checkpoint<br>
The WT_SESSION::checkpoint method's \c snapshot configuration string has
been renamed to \c name.  The name assigned to checkpoints without a
specified \c name configuration is now \c "WiredTigerCheckpoint".

<li>WT_SESSION.drop<br>
In releases before 1.3, the WT_SESSION::drop method was used to delete
snapshots.  In 1.3, the functionality of deleting snapshots has been
moved to the WT_SESSION::checkpoint method, specifically, snapshots are
discarded using the WT_SESSION::checkpoint method's \c drop configuration
string.

<li>WT_SESSION.sync<br>
The WT_SESSION::sync method has been removed from the 1.3 release; the
functionality of creating an object snapshot has moved to the
WT_SESSION::checkpoint method, specifically, creating a snapshot of a
one or more objects is done using the WT_SESSION::checkpoint method's
\c target configuration string.

<li>wt drop -s<br>
The \c -s option to the \c drop command for the \c wt command line
utility has been removed, and object snapshots may no longer be removed
from the command line.

<li>wt dump, list -s<br>
The \c -s options to the \c dump and \c list commands for the \c wt
command line utility have been renamed to be \c -c.
</ul>
</dd>

<dt>WT_SESSION.open_cursor</dt>
<dd>
In releases before 1.3, the WT_SESSION::open_cursor method could duplicate
cursors that were not positioned in an object; in 1.3, a cursor must be
positioned in order to be duplicated.
</dd>

<dt>Transactional cursors</dt>
<dd>
In releases before 1.3, ending a transaction by calling the
WT_SESSION::commit_transaction or WT_SESSION::rollback_transaction methods
implicitly closed all open cursors; in 1.3, the cursors remain open, but are
reset (discarding their positions and cursor values).  This means applications
must change to either close cursors explicitly, or rely on an eventual
WT_SESSION::close or WT_CONNECTION::close methods to implicitly close open
cursors.
</dd>

<dt>Default transactional isolation level</dt>
<dd>
In releases before 1.3, the default isolation level for transaction was
\c snapshot, and the default isolation level for non-transaction operations
was \c read-uncommitted; in 1.3, the default isolation level for all
operations is \c read-committed.

The default can be overridden for a session using the \c isolation setting
in WT_CONNECTION::open_cursor.
</dd>

<dt>WT_SESSION.truncate</dt>
<dd>
In releases before 1.3, the WT_SESSION::truncate method required cursors used
for truncation of a cursor range to reference existing keys in the object;
in 1.3, the WT_SESSION::truncate method has been changed to allow cursors to
reference any valid key in the object's name space so applications may discard
portions of the object name space without knowing exactly what records the
object contains.
</dd>

<dt>WT_CURSOR.equals</dt>
<dd>
In releases before 1.3, the WT_CURSOR::equals method returned zero/non-zero
to indicate cursor equality; in 1.3, the WT_CURSOR::equals method has
been replaced with WT_CURSOR::compare, which compares two cursors and
returns a cursor comparison status (less than 0, equal to 0, or greater than
0) depending on the cursors' key order.
</dd>

<dt>File format changes</dt>
<dd>
The underlying file formats changed in the 1.3 release; tables and files
should be dumped and re-loaded into a new database.
</dd>

</dl>
<hr>

*/
