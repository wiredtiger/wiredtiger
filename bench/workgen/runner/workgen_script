#! /bin/bash

ERROR=0
OUTPUT=test.txt
TEST=../../../bench/workgen/runner/many-dhandle-stress-small.py
echo python3 $TEST 2> $OUTPUT
python3 $TEST 2> $OUTPUT

# Check exceptions
if grep -io "exception" $OUTPUT; then
	echo FAILED
	ERROR=1
fi

# Check CREATE operation
NB_CREATE_THRESHOLD=1
NB_CREATE=$(grep -ic "cycling idle.*create" $OUTPUT)
if [[ $NB_CREATE -ge $NB_CREATE_THRESHOLD ]]; then
	echo "FAILED: Too many long CREATE operations: $NB_CREATE (max: $NB_CREATE_THRESHOLD)"
	ERROR=1
fi

# Check DROP operation
NB_DROP_THRESHOLD=10
NB_DROP=$(grep -ic "cycling idle.*drop" $OUTPUT)
if [[ $NB_DROP -ge $NB_DROP_THRESHOLD ]]; then
	echo "FAILED: Too many long DROP operations: $NB_DROP (max: $NB_DROP_THRESHOLD)"
	ERROR=1
fi

# Check how many read operations were too slow
NB_READ_THRESHOLD=1
NB_READ=$(grep -ic "max latency exceeded.*read" $OUTPUT)
if [[ $NB_READ -ge $NB_READ_THRESHOLD ]]; then
	echo "FAILED: Too many long READ operations: $NB_READ (max: $NB_READ_THRESHOLD)"
	ERROR=1
fi

# Check how many insert operations were too slow
NB_INSERT_THRESHOLD=1
NB_INSERT=$(grep -ic "max latency exceeded.*insert" $OUTPUT)
if [[ $NB_INSERT -ge $NB_INSERT_THRESHOLD ]]; then
	echo "FAILED: Too many long INSERT operations: $NB_INSERT (max: $NB_INSERT_THRESHOLD)"
	ERROR=1
fi

# Check how many update operations were too slow
NB_UPDATE_THRESHOLD=1
NB_UPDATE=$(grep -ic "max latency exceeded.*update" $OUTPUT)
if [[ $NB_UPDATE -ge $NB_UPDATE_THRESHOLD ]]; then
	echo "FAILED: Too many long UPDATE operations: $NB_UPDATE (max: $NB_UPDATE_THRESHOLD)"
	ERROR=1
fi

# Check if at least one read/insert/update operation took too long
OUTPUT=WT_TEST/monitor
# Replace "," with witespaces
sed -i 's/,/ /g' $OUTPUT

# Get the max latency achieved for each operation
MAX_LATENCY_READ=$(grep ":" $OUTPUT | awk  '{print $11}' | sort -n | tail -1)
MAX_LATENCY_INSERT=$(grep ":" $OUTPUT | awk  '{print $14}' | sort -n | tail -1)
MAX_LATENCY_UPDATE=$(grep ":" $OUTPUT | awk  '{print $17}' | sort -n | tail -1)

MAX_LATENCY_READ_THRESHOLD=1
MAX_LATENCY_INSERT_THRESHOLD=1
MAX_LATENCY_UPDATE_THRESHOLD=1
if [[ $MAX_LATENCY_READ -ge $MAX_LATENCY_READ_THRESHOLD ]]; then
	echo "FAILED: One read operation took too long: $MAX_LATENCY_READ (max: $MAX_LATENCY_READ_THRESHOLD)"
	ERROR=1
fi

if [[ $MAX_LATENCY_INSERT -ge $MAX_LATENCY_INSERT_THRESHOLD ]]; then
	echo "FAILED: One insert operation took too long: $MAX_LATENCY_INSERT (max: $MAX_LATENCY_INSERT_THRESHOLD)"
	ERROR=1
fi

if [[ $MAX_LATENCY_UPDATE -ge $MAX_LATENCY_UPDATE_THRESHOLD ]]; then
	echo "FAILED: One update operation took too long: $MAX_LATENCY_UPDATE (max: $MAX_LATENCY_UPDATE_THRESHOLD)"
	ERROR=1
fi

if [[ $ERROR -ne 0 ]]; then
	exit 1;
fi

echo SUCCESS
